{"version":3,"sources":["api/api.ts","components/Pagination/Pagination.tsx","components/Players/Players.tsx","components/Form/Form.tsx","components/Team/Team.tsx","App.tsx","index.tsx"],"names":["URL","Pagination","component","perPage","currentPage","setPerPage","setCurrentPage","total_pages","total_per_pages","i","meta","useEffect","className","htmlFor","name","id","value","onChange","event","Number","target","map","per_page","data","length","total_count","type","disabled","onClick","page","next_page","Players","useState","players","setPlayers","fetch","then","response","ok","json","Promise","reject","result","catch","error","console","log","player","first_name","charAt","last_name","title","team","Form","teamLast","initialValues","city","abbreviation","conference","onSubmit","values","newTeam","method","headers","body","JSON","stringify","formik","handleChange","handleSubmit","Team","teams","setTeams","classNames","east","west","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908996a6.chunk.js","sourcesContent":["const URL = 'https://www.balldontlie.io/api/v1';\n\nexport const getTeam = (per_page: number, page: number) => {\n  return fetch(`${URL}/teams?page=${page}&per_page=${per_page}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPlayers = (per_page: number, page: number) => {\n  return fetch(`${URL}/players?page=${page}&per_page=${per_page}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n\nexport const addTeam = (team: newTeam) => {\n  // eslint-disable-next-line no-console\n  console.log(team);\n\n  return fetch('https://www.balldontlie.io/api/v1/teams', {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(team),\n  })\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n","/* eslint-disable no-plusplus */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect } from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  component: Team | Player;\n  perPage: number;\n  currentPage: number;\n  setPerPage: (perPage: number) => void;\n  setCurrentPage: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  component,\n  perPage,\n  currentPage,\n  setPerPage,\n  setCurrentPage,\n}) => {\n  const total_pages = [];\n  let total_per_pages = [];\n\n  if (perPage % 8 === 0) {\n    total_per_pages = [8, 16];\n  } else {\n    total_per_pages = [10, 20, 30];\n  }\n\n  for (let i = 1; i <= component.meta.total_pages; i++) {\n    total_pages[i - 1] = i;\n  }\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [perPage]);\n\n  return (\n    <div className=\"displaying_items\">\n      <span className=\"per_page\">\n        <label htmlFor=\"per_page\">\n          Items per page\n        </label>\n        <select\n          name=\"per_page\"\n          id=\"per_page\"\n          className=\"button\"\n          value={perPage}\n          onChange={(event) => setPerPage(Number(event.target.value))}\n        >\n          {total_per_pages.map(per_page => (\n            <option value={per_page} key={per_page}>{per_page}</option>\n          ))}\n        </select>\n        <label\n          htmlFor=\"per_page\"\n        >\n          {component\n            && `Displaying ${(currentPage - 1) * perPage + 1}-${(currentPage - 1) * perPage + component?.data.length} of ${component?.meta.total_count} items`}\n        </label>\n      </span>\n\n      <span className=\"pages\">\n        <label\n          htmlFor=\"pages\"\n        >\n          {`${currentPage} of ${component?.meta.total_pages} pages`}\n        </label>\n\n        <input\n          type=\"button\"\n          value=\"<\"\n          className=\"button_page button_page_left\"\n          disabled={currentPage === 1}\n          onClick={() => setCurrentPage(currentPage - 1)}\n        />\n\n        <select\n          name=\"pages\"\n          id=\"pages\"\n          className=\"button\"\n          value={currentPage}\n          onChange={(event) => setCurrentPage(Number(event.target.value))}\n        >\n          {total_pages.map(page => (\n            <option value={page} key={page}>{page}</option>\n          ))}\n        </select>\n        <input\n          type=\"button\"\n          value=\">\"\n          className=\"button_page\"\n          disabled={component?.meta.next_page === null}\n          onClick={() => setCurrentPage(currentPage + 1)}\n        />\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPlayers } from '../../api/api';\nimport { Pagination } from '../Pagination';\nimport './Players.scss';\n\nexport const Players: React.FC = () => {\n  const [players, setPlayers] = useState<Player>();\n  const [perPage, setPerPage] = useState<number>(8);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  useEffect(() => {\n    getPlayers(perPage, currentPage)\n      .then(result => setPlayers(result))\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      });\n  }, [perPage, currentPage]);\n\n  return (\n    <>\n      <h2 className=\"title\">Players</h2>\n      <div className=\"player\">\n        {players?.data.map(player => (\n          <div key={player.id} className=\"player_card\">\n            <div className=\"initials\">\n              {player.first_name.charAt(0)}\n              {player.last_name.charAt(0)}\n            </div>\n            <div className=\"name_lasname\" title={player.team.name}>\n              <div>{player.first_name}</div>\n              <div>{player.last_name}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {players && (\n        <Pagination\n          component={players}\n          perPage={perPage}\n          currentPage={currentPage}\n          setPerPage={setPerPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { addTeam } from '../../api/api';\nimport './Form.scss';\n\ntype Props = {\n  teamLast: number\n};\n\nexport const Form: React.FC<Props> = ({ teamLast }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          city: '',\n          abbreviation: '',\n          conference: '',\n        }}\n        onSubmit={values => {\n          const newTeam = {\n            id: teamLast + 1,\n            name: values.name,\n            city: values.city,\n            abbreviation: values.abbreviation,\n            conference: values.conference,\n\n          };\n\n          addTeam(newTeam);\n        }}\n      >\n        {(formik) => {\n          const {\n            values,\n            handleChange,\n            handleSubmit,\n          } = formik;\n\n          return (\n            <form onSubmit={handleSubmit} className=\"form\">\n              <div className=\"label_input\">\n                <label htmlFor=\"name\" className=\"label\">Name</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  className=\"input\"\n                  value={values.name}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <div className=\"label_input\">\n                <label htmlFor=\"city\" className=\"label\">City</label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  name=\"city\"\n                  className=\"input\"\n                  value={values.city}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <div className=\"label_input\">\n                <label htmlFor=\"abbreviation\" className=\"label\">Abbreviation</label>\n                <input\n                  type=\"text\"\n                  id=\"abbreviation\"\n                  name=\"abbreviation\"\n                  className=\"input\"\n                  value={values.abbreviation}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <div className=\"label_input\">\n                <label htmlFor=\"city\" className=\"label\">Conference</label>\n                <select\n                  name=\"conference\"\n                  id=\"conference\"\n                  className=\"input select\"\n                  value={values.conference}\n                  onChange={handleChange}\n                >\n                  <option value=\"east\">East</option>\n                  <option value=\"west\">West</option>\n                </select>\n              </div>\n\n              <button type=\"submit\" className=\"submit-buttom\">\n                Add Team\n              </button>\n            </form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport './Team.scss';\nimport { getTeam } from '../../api/api';\nimport { Form } from '../Form';\nimport { Pagination } from '../Pagination';\n\nexport const Team: React.FC = () => {\n  const [teams, setTeams] = useState<Team>();\n  const [perPage, setPerPage] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  useEffect(() => {\n    getTeam(perPage, currentPage)\n      .then(result => setTeams(result))\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      });\n  }, [perPage, currentPage]);\n\n  return (\n    <>\n      <h2 className=\"title\">Teams</h2>\n      {teams && (\n        <Form teamLast={teams?.meta.total_count} />\n      )}\n\n      <table className=\"content-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>City</th>\n            <th>Abbreviation</th>\n            <th>Conference</th>\n          </tr>\n        </thead>\n        <tbody>\n          {teams\n            && teams.data.map(team => (\n              <tr key={team.id}>\n                <th>{team.name}</th>\n                <th>{team.city}</th>\n                <th>{team.abbreviation}</th>\n                <th className={classNames({ east: team.conference === 'East' }, { west: team.conference === 'West' })}>{team.conference}</th>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n\n      {teams && (\n        <Pagination\n          component={teams}\n          perPage={perPage}\n          currentPage={currentPage}\n          setPerPage={setPerPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Players } from './components/Players';\nimport { Team } from './components/Team';\nimport './style/App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"heading\">NBA profile</h1>\n      <Team />\n\n      <Players />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}